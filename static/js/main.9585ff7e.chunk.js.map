{"version":3,"sources":["components/contactForm/contactForm.module.css","app.module.css","components/contactFilter/contactFilter.module.css","components/contactList/contactList.module.css","components/contactList/contactListItem.module.css","components/contactForm/contactForm.js","components/contactFilter/contactFilter.js","components/contactList/contactListItem.js","components/contactList/contactList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onAddContact","this","onSubmit","className","styles","label","input","type","onChange","pattern","placeholder","submit","Component","ContactFilter","changeFilter","findContacts","findContactInput","ContactListItem","contact","removeContact","delete","onClick","ContactList","contacts","contactList","map","contactListItem","key","id","App","filter","addContact","uuidv4","some","contactName","toLowerCase","alert","filteredContacts","filterContact","length","resetFilter","includes","persistedContacts","localStorage","getItem","JSON","parse","prevProps","prevState","tasks","setItem","stringify","container","contactForm","phonebook","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9585ff7e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"contactForm_label__1lxmi\",\"input\":\"contactForm_input__2KXel\",\"submit\":\"contactForm_submit__odTCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2JKVN\",\"phonebook\":\"app_phonebook__1hXRO\",\"contactForm\":\"app_contactForm__1GQDT\",\"contacts\":\"app_contacts__1ZB28\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findContacts\":\"contactFilter_findContacts__3NIew\",\"findContactInput\":\"contactFilter_findContactInput__2O4Qk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"contactList_contactList__2yBfA\",\"contactListItem\":\"contactList_contactListItem__3WoKj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete\":\"contactListItem_delete__2uput\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './contactForm.module.css';\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onAddContact({ ...this.state });\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label className={styles.label}>\n          Name\n          <input className={styles.input} type=\"text\" name=\"name\" value={name} onChange={this.handleChange} />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n            name=\"number\"\n            placeholder=\"000-00-00\"\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.submit} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './contactFilter.module.css';\n\nconst ContactFilter = ({ changeFilter, value }) => (\n  <div>\n    <label className={styles.findContacts}>\n      Find contacts by name\n      <input className={styles.findContactInput} onChange={changeFilter} value={value} type=\"text\" name=\"search\" />\n    </label>\n  </div>\n);\n\nContactFilter.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default ContactFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './contactListItem.module.css';\n\nconst ContactListItem = ({ contact, removeContact }) => (\n  <>\n    <div>\n      <span>{contact.name} </span>\n      <span>{contact.number}</span>\n    </div>\n    <button className={styles.delete} onClick={removeContact} type=\"button\">\n      Delete\n    </button>\n  </>\n);\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  removeContact: PropTypes.func.isRequired,\n};\nexport default ContactListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactListItem from './contactListItem';\nimport styles from './contactList.module.css';\n\nconst ContactList = ({ contacts, removeContact }) => (\n  <ul className={styles.contactList}>\n    {contacts.map(contact => (\n      <li className={styles.contactListItem} key={contact.id}>\n        <ContactListItem removeContact={() => removeContact(contact.id)} contact={contact} />\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string.isRequired })).isRequired,\n  removeContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/contactForm/contactForm';\nimport ContactFilter from './components/contactFilter/contactFilter';\nimport ContactList from './components/contactList/contactList';\nimport styles from './app.module.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem('contacts');\n    if (persistedContacts) {\n      const contacts = JSON.parse(persistedContacts);\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.tasks !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    const uniqueName = this.state.contacts.some(\n      contactName => contactName.name.toLowerCase() === contact.name.toLowerCase(),\n    );\n\n    if (uniqueName) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      this.setState(state => ({\n        contacts: [...state.contacts, contact],\n      }));\n    }\n  };\n\n  removeContact = id => {\n    const filteredContacts = this.filterContact();\n\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n\n    if (filteredContacts.length === 1) {\n      this.resetFilter();\n    }\n  };\n\n  changeFilter = e => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  resetFilter = () => {\n    this.setState({\n      filter: '',\n    });\n  };\n\n  filterContact = () => {\n    return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(this.state.filter.toLowerCase()));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.contactForm}>\n          <h1 className={styles.phonebook}>Phonebook</h1>\n          <ContactForm onAddContact={this.addContact} />\n        </div>\n        <div>\n          {contacts.length > 0 && (\n            <div>\n              <h2 className={styles.contacts}>Contacts</h2>\n              {contacts.length >= 2 && <ContactFilter changeFilter={this.changeFilter} value={filter} />}\n              <ContactList contacts={this.filterContact()} removeContact={this.removeContact} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}